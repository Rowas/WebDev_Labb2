@page "/login"
@using System.ComponentModel.DataAnnotations

    <MudMainContent>
        <MudTabs Centered="true" @bind-ActivePanelIndex="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
            <EditForm Model="@regModel" OnValidSubmit="OnValidSubmit">
                <MudTabPanel Text="login">
                    <MudTextField @bind-Value="loginModel.Email" Label="Email" Placeholder="Enter email..." Variant="Variant.Outlined" InputType="InputType.Email" InputMode="InputMode.email" />
                    <MudTextField @bind-Value="loginModel.Password" Label="Password" Placeholder="Enter password..." Variant="Variant.Outlined" InputType="InputType.Password" />
                    <MudCheckBox @bind-value="loginModel.rememberMe" Label="Remember Me" />
                    <MudCardActions>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" ButtonType="ButtonType.Submit">Login</MudButton>
                    </MudCardActions>
                </MudTabPanel>
            </EditForm>
            <EditForm Model="@regModel" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator/>
                <MudTabPanel Text="register">
                    <MudTextField @bind-Value="regModel.Email" Label="Email" Placeholder="Enter email" Variant="Variant.Outlined" InputType="InputType.Email" />
                    <MudTextField @bind-Value="regModel.FirstName" Label="First Name" Placeholder="First name" Variant="Variant.Outlined" InputType="InputType.Text" />
                    <MudTextField @bind-Value="regModel.LastName" Label="Last Name" Placeholder="Last name" Variant="Variant.Outlined" InputType="InputType.Text" />
                    <MudTextField @bind-Value="regModel.Mobile_Number" Label="Mobile Number" Placeholder="Mobile number" Variant="Variant.Outlined" InputType="InputType.Text" />
                    <MudTextField @bind-Value="regModel.Street" Label="Street" Placeholder="Street" Variant="Variant.Outlined" InputType="InputType.Text" />
                    <MudTextField @bind-Value="regModel.Post_Code" Label="Post Code" Placeholder="Post code" Variant="Variant.Outlined" InputType="InputType.Text" />
                    <MudTextField @bind-Value="regModel.City" Label="City" Placeholder="City" Variant="Variant.Outlined" InputType="InputType.Text" />
                    <MudTextField @bind-Value="regModel.Country" Label="Country" Variant="Variant.Outlined" Disabled="true"></MudTextField>
                    <br />
                    <MudTextField Label="Password" Variant="Variant.Outlined" @bind-Value="regModel.Password" For="@(() => regModel.Password)" InputType="InputType.Password" />
                    <MudTextField Label="Repeat Password" Variant="Variant.Outlined" @bind-Value="regModel.Password2" For="@(() => regModel.Password2)" InputType="InputType.Password" />
                    <MudCardActions>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" ButtonType="ButtonType.Submit">Register</MudButton>
                    </MudCardActions>
                </MudTabPanel>
            </EditForm>
        </MudTabs>
    </MudMainContent>

@code {
    RegisterAccountForm regModel = new RegisterAccountForm();
    LoginAccountForm loginModel = new LoginAccountForm();

    private int selectedTab = 0;

    private bool success;

    public class LoginAccountForm
    {
        [Required]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
        [Required]
        public bool rememberMe = false;
    }

    public class RegisterAccountForm
    {
        [Required]
        public string FirstName { get; set; }

        [Required]
        public string LastName { get; set; }

        [Required]
        public string Mobile_Number { get; set; }

        [Required]
        public string Street { get; set; }

        [Required]
        public string Post_Code { get; set; }

        [Required]
        public string City { get; set; }

        public string Country { get; set; } = "Sweden";

        [Required]
        [EmailAddress]
        public string Email { get; set; }
        
        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password), ErrorMessage = "Passwords do not match.")]
        public string Password2 { get; set; }

        private string UserName
        {
            get => FirstName.Substring(0, 1) + LastName.Substring(0, 1);
            set => UserName = FirstName.Substring(0, 1) + LastName.Substring(0, 1);
        }
        
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

    private void OnSelectedTabChanged(int index)
    {
        selectedTab = index;
    }
}
